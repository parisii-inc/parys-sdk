/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { BasicActions, BasicActionsInterface } from "../BasicActions";

const _abi = [
  {
    type: "function",
    name: "collectTokenCollateral",
    inputs: [
      {
        name: "_manager",
        type: "address",
        internalType: "address",
      },
      {
        name: "_collateralJoin",
        type: "address",
        internalType: "address",
      },
      {
        name: "_safeId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_deltaWad",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "exitAllSystemCoins",
    inputs: [
      {
        name: "_coinJoin",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "exitCollateral",
    inputs: [
      {
        name: "_collateralJoin",
        type: "address",
        internalType: "address",
      },
      {
        name: "_wad",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "exitSystemCoins",
    inputs: [
      {
        name: "_coinJoin",
        type: "address",
        internalType: "address",
      },
      {
        name: "_coinsToExit",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "freeTokenCollateral",
    inputs: [
      {
        name: "_manager",
        type: "address",
        internalType: "address",
      },
      {
        name: "_collateralJoin",
        type: "address",
        internalType: "address",
      },
      {
        name: "_safeId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_deltaWad",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "generateDebt",
    inputs: [
      {
        name: "_manager",
        type: "address",
        internalType: "address",
      },
      {
        name: "_taxCollector",
        type: "address",
        internalType: "address",
      },
      {
        name: "_coinJoin",
        type: "address",
        internalType: "address",
      },
      {
        name: "_safeId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_deltaWad",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "joinSystemCoins",
    inputs: [
      {
        name: "_coinJoin",
        type: "address",
        internalType: "address",
      },
      {
        name: "_dst",
        type: "address",
        internalType: "address",
      },
      {
        name: "_wad",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "lockTokenCollateral",
    inputs: [
      {
        name: "_manager",
        type: "address",
        internalType: "address",
      },
      {
        name: "_collateralJoin",
        type: "address",
        internalType: "address",
      },
      {
        name: "_safeId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_deltaWad",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "lockTokenCollateralAndGenerateDebt",
    inputs: [
      {
        name: "_manager",
        type: "address",
        internalType: "address",
      },
      {
        name: "_taxCollector",
        type: "address",
        internalType: "address",
      },
      {
        name: "_collateralJoin",
        type: "address",
        internalType: "address",
      },
      {
        name: "_coinJoin",
        type: "address",
        internalType: "address",
      },
      {
        name: "_safe",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_collateralAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_deltaWad",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "openLockTokenCollateralAndGenerateDebt",
    inputs: [
      {
        name: "_manager",
        type: "address",
        internalType: "address",
      },
      {
        name: "_taxCollector",
        type: "address",
        internalType: "address",
      },
      {
        name: "_collateralJoin",
        type: "address",
        internalType: "address",
      },
      {
        name: "_coinJoin",
        type: "address",
        internalType: "address",
      },
      {
        name: "_cType",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_collateralAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_deltaWad",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "_safe",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "openSAFE",
    inputs: [
      {
        name: "_manager",
        type: "address",
        internalType: "address",
      },
      {
        name: "_cType",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_usr",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "_safeId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "repayAllDebt",
    inputs: [
      {
        name: "_manager",
        type: "address",
        internalType: "address",
      },
      {
        name: "_taxCollector",
        type: "address",
        internalType: "address",
      },
      {
        name: "_coinJoin",
        type: "address",
        internalType: "address",
      },
      {
        name: "_safeId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "repayAllDebtAndFreeTokenCollateral",
    inputs: [
      {
        name: "_manager",
        type: "address",
        internalType: "address",
      },
      {
        name: "_taxCollector",
        type: "address",
        internalType: "address",
      },
      {
        name: "_collateralJoin",
        type: "address",
        internalType: "address",
      },
      {
        name: "_coinJoin",
        type: "address",
        internalType: "address",
      },
      {
        name: "_safeId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_collateralWad",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "repayDebt",
    inputs: [
      {
        name: "_manager",
        type: "address",
        internalType: "address",
      },
      {
        name: "_taxCollector",
        type: "address",
        internalType: "address",
      },
      {
        name: "_coinJoin",
        type: "address",
        internalType: "address",
      },
      {
        name: "_safeId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_deltaWad",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "repayDebtAndFreeTokenCollateral",
    inputs: [
      {
        name: "_manager",
        type: "address",
        internalType: "address",
      },
      {
        name: "_taxCollector",
        type: "address",
        internalType: "address",
      },
      {
        name: "_collateralJoin",
        type: "address",
        internalType: "address",
      },
      {
        name: "_coinJoin",
        type: "address",
        internalType: "address",
      },
      {
        name: "_safeId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_collateralWad",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_debtWad",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "AddressInsufficientBalance",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "FailedInnerCall",
    inputs: [],
  },
  {
    type: "error",
    name: "IntOverflow",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyDelegateCalls",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

export class BasicActions__factory {
  static readonly abi = _abi;
  static createInterface(): BasicActionsInterface {
    return new utils.Interface(_abi) as BasicActionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasicActions {
    return new Contract(address, _abi, signerOrProvider) as BasicActions;
  }
}
