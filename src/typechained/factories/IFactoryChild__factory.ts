/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IFactoryChild, IFactoryChildInterface } from "../IFactoryChild";

const _abi = [
  {
    type: "function",
    name: "factory",
    inputs: [],
    outputs: [
      {
        name: "_factory",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "error",
    name: "CallerNotFactory",
    inputs: [],
  },
  {
    type: "error",
    name: "NotFactoryDeployment",
    inputs: [],
  },
] as const;

export class IFactoryChild__factory {
  static readonly abi = _abi;
  static createInterface(): IFactoryChildInterface {
    return new utils.Interface(_abi) as IFactoryChildInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IFactoryChild {
    return new Contract(address, _abi, signerOrProvider) as IFactoryChild;
  }
}
