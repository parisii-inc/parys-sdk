/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  MockUniswapV3Factory,
  MockUniswapV3FactoryInterface,
} from "../MockUniswapV3Factory";

const _abi = [
  {
    type: "function",
    name: "createPool",
    inputs: [
      {
        name: "_tokenA",
        type: "address",
        internalType: "address",
      },
      {
        name: "_tokenB",
        type: "address",
        internalType: "address",
      },
      {
        name: "_fee",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    outputs: [
      {
        name: "_pool",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "enableFeeAmount",
    inputs: [
      {
        name: "",
        type: "uint24",
        internalType: "uint24",
      },
      {
        name: "",
        type: "int24",
        internalType: "int24",
      },
    ],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "feeAmountTickSpacing",
    inputs: [
      {
        name: "",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    outputs: [
      {
        name: "_tickSpacing",
        type: "int24",
        internalType: "int24",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getPool",
    inputs: [
      {
        name: "_tokenA",
        type: "address",
        internalType: "address",
      },
      {
        name: "_tokenB",
        type: "address",
        internalType: "address",
      },
      {
        name: "_fee",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    outputs: [
      {
        name: "_pool",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "event",
    name: "PoolCreated",
    inputs: [
      {
        name: "token0",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "token1",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "fee",
        type: "uint24",
        indexed: true,
        internalType: "uint24",
      },
      {
        name: "tickSpacing",
        type: "int24",
        indexed: false,
        internalType: "int24",
      },
      {
        name: "pool",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

export class MockUniswapV3Factory__factory {
  static readonly abi = _abi;
  static createInterface(): MockUniswapV3FactoryInterface {
    return new utils.Interface(_abi) as MockUniswapV3FactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockUniswapV3Factory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockUniswapV3Factory;
  }
}
