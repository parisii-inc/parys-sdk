/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { ISAFESaviour, ISAFESaviourInterface } from "../ISAFESaviour";

const _abi = [
  {
    type: "function",
    name: "saveSAFE",
    inputs: [
      {
        name: "_liquidator",
        type: "address",
        internalType: "address",
      },
      {
        name: "_cType",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_safe",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "_ok",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "_collateralAdded",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_liquidatorReward",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

export class ISAFESaviour__factory {
  static readonly abi = _abi;
  static createInterface(): ISAFESaviourInterface {
    return new utils.Interface(_abi) as ISAFESaviourInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISAFESaviour {
    return new Contract(address, _abi, signerOrProvider) as ISAFESaviour;
  }
}
