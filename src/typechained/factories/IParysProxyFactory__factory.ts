/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IParysProxyFactory,
  IParysProxyFactoryInterface,
} from "../IParysProxyFactory";

const _abi = [
  {
    type: "function",
    name: "build",
    inputs: [],
    outputs: [
      {
        name: "_proxy",
        type: "address",
        internalType: "address payable",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "build",
    inputs: [
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "_proxy",
        type: "address",
        internalType: "address payable",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isProxy",
    inputs: [
      {
        name: "_proxyAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "_exists",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "nonces",
    inputs: [
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "_nonce",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proxies",
    inputs: [
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "_proxy",
        type: "address",
        internalType: "contract IParysProxy",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "Created",
    inputs: [
      {
        name: "_sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_proxy",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyHasProxy",
    inputs: [
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_proxy",
        type: "address",
        internalType: "contract IParysProxy",
      },
    ],
  },
] as const;

export class IParysProxyFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IParysProxyFactoryInterface {
    return new utils.Interface(_abi) as IParysProxyFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IParysProxyFactory {
    return new Contract(address, _abi, signerOrProvider) as IParysProxyFactory;
  }
}
