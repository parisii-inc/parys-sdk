{"abi":[{"type":"function","name":"addAuthorization","inputs":[{"name":"_account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"authorizedAccounts","inputs":[{"name":"_account","type":"address","internalType":"address"}],"outputs":[{"name":"_authorized","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"authorizedAccounts","inputs":[],"outputs":[{"name":"_accounts","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"claim","inputs":[{"name":"_token","type":"address","internalType":"address"},{"name":"_wad","type":"uint256","internalType":"uint256"},{"name":"_merkleProof","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"emergencyWidthdraw","inputs":[{"name":"_rescueReceiver","type":"address","internalType":"address"},{"name":"_token","type":"address","internalType":"address"},{"name":"_wad","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"epochCounter","inputs":[],"outputs":[{"name":"_epochCounter","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"epochDuration","inputs":[],"outputs":[{"name":"_epochDuration","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"isClaimed","inputs":[{"name":"_merkleRoot","type":"bytes32","internalType":"bytes32"},{"name":"_account","type":"address","internalType":"address"}],"outputs":[{"name":"_isClaimed","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"lastUpdatedTime","inputs":[],"outputs":[{"name":"_lastUpdatedTime","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"merkleRoots","inputs":[{"name":"_token","type":"address","internalType":"address"}],"outputs":[{"name":"_root","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"modifyParameters","inputs":[{"name":"_param","type":"bytes32","internalType":"bytes32"},{"name":"_data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"multiClaim","inputs":[{"name":"_tokens","type":"address[]","internalType":"address[]"},{"name":"_wads","type":"uint256[]","internalType":"uint256[]"},{"name":"_merkleProofs","type":"bytes32[][]","internalType":"bytes32[][]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"pause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeAuthorization","inputs":[{"name":"_account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rootSetter","inputs":[],"outputs":[{"name":"_rootSetter","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"unpause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateMerkleRoots","inputs":[{"name":"_tokens","type":"address[]","internalType":"address[]"},{"name":"_merkleRoots","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"AddAuthorization","inputs":[{"name":"_account","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ModifyParameters","inputs":[{"name":"_param","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"_cType","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"_data","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"RemoveAuthorization","inputs":[{"name":"_account","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RewardDistributorEmergencyWithdrawal","inputs":[{"name":"_rescueReceiver","type":"address","indexed":true,"internalType":"address"},{"name":"_rewardToken","type":"address","indexed":true,"internalType":"address"},{"name":"_wad","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RewardDistributorMerkleRootUpdated","inputs":[{"name":"_rewardToken","type":"address","indexed":true,"internalType":"address"},{"name":"_merkleRoot","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"_epochCounter","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RewardDistributorRewardClaimed","inputs":[{"name":"_account","type":"address","indexed":true,"internalType":"address"},{"name":"_rewardToken","type":"address","indexed":true,"internalType":"address"},{"name":"_wad","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"AlreadyAuthorized","inputs":[]},{"type":"error","name":"NotAuthorized","inputs":[]},{"type":"error","name":"RewardDistributor_AlreadyClaimed","inputs":[]},{"type":"error","name":"RewardDistributor_ArrayLengthsMustMatch","inputs":[]},{"type":"error","name":"RewardDistributor_InvalidAmount","inputs":[]},{"type":"error","name":"RewardDistributor_InvalidMerkleProof","inputs":[]},{"type":"error","name":"RewardDistributor_InvalidMerkleRoot","inputs":[]},{"type":"error","name":"RewardDistributor_InvalidTokenAddress","inputs":[]},{"type":"error","name":"RewardDistributor_NotRootSetter","inputs":[]},{"type":"error","name":"RewardDistributor_TooSoonEpochNotElapsed","inputs":[]},{"type":"error","name":"Unauthorized","inputs":[]},{"type":"error","name":"UnrecognizedCType","inputs":[]},{"type":"error","name":"UnrecognizedParam","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addAuthorization(address)":"35b28153","authorizedAccounts()":"2e391876","authorizedAccounts(address)":"24ba5884","claim(address,uint256,bytes32[])":"3d13f874","emergencyWidthdraw(address,address,uint256)":"54227743","epochCounter()":"14b19c5a","epochDuration()":"4ff0876a","isClaimed(bytes32,address)":"84ef71fb","lastUpdatedTime()":"bf856895","merkleRoots(address)":"ae9a6808","modifyParameters(bytes32,bytes)":"da8a4bb8","multiClaim(address[],uint256[],bytes32[][])":"87d32bbb","pause()":"8456cb59","removeAuthorization(address)":"94f3f81d","rootSetter()":"318926f7","unpause()":"3f4ba83a","updateMerkleRoots(address[],bytes32[])":"2c0046c1"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardDistributor_AlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardDistributor_ArrayLengthsMustMatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardDistributor_InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardDistributor_InvalidMerkleProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardDistributor_InvalidMerkleRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardDistributor_InvalidTokenAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardDistributor_NotRootSetter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardDistributor_TooSoonEpochNotElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnrecognizedCType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnrecognizedParam\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"AddAuthorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_param\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_cType\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"ModifyParameters\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"RemoveAuthorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_rescueReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_wad\",\"type\":\"uint256\"}],\"name\":\"RewardDistributorEmergencyWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_epochCounter\",\"type\":\"uint256\"}],\"name\":\"RewardDistributorMerkleRootUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_wad\",\"type\":\"uint256\"}],\"name\":\"RewardDistributorRewardClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"addAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"authorizedAccounts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_authorized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authorizedAccounts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_accounts\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_wad\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rescueReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_wad\",\"type\":\"uint256\"}],\"name\":\"emergencyWidthdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epochCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_epochCounter\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epochDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_epochDuration\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_isClaimed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdatedTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_lastUpdatedTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"merkleRoots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_param\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"modifyParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_wads\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"_merkleProofs\",\"type\":\"bytes32[][]\"}],\"name\":\"multiClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"removeAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rootSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_rootSetter\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"_merkleRoots\",\"type\":\"bytes32[]\"}],\"name\":\"updateMerkleRoots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AddAuthorization(address)\":{\"params\":{\"_account\":\"Account that is authorized\"}},\"ModifyParameters(bytes32,bytes32,bytes)\":{\"details\":\"Event topic 1 is always a parameter, topic 2 can be empty (global params)\"},\"RemoveAuthorization(address)\":{\"params\":{\"_account\":\"Account that is unauthorized\"}},\"RewardDistributorEmergencyWithdrawal(address,address,uint256)\":{\"params\":{\"_rescueReceiver\":\"Address of the account that received the reward\",\"_rewardToken\":\"Address of the reward token\",\"_wad\":\"Amount of reward tokens withdrawn\"}},\"RewardDistributorMerkleRootUpdated(address,bytes32,uint256)\":{\"params\":{\"_epochCounter\":\"Counter of the current epoch\",\"_merkleRoot\":\"Merkle root for the token\",\"_rewardToken\":\"Address of the reward token\"}},\"RewardDistributorRewardClaimed(address,address,uint256)\":{\"params\":{\"_account\":\"Address of the account that claimed the reward\",\"_rewardToken\":\"Address of the reward token\",\"_wad\":\"Amount of reward tokens claimed\"}}},\"kind\":\"dev\",\"methods\":{\"addAuthorization(address)\":{\"details\":\"Method will revert if the account is already authorized\",\"params\":{\"_account\":\"Account to add authorization to\"}},\"authorizedAccounts()\":{\"returns\":{\"_accounts\":\"Array of authorized accounts\"}},\"authorizedAccounts(address)\":{\"params\":{\"_account\":\"Account to check\"},\"returns\":{\"_authorized\":\"Whether the account is authorized or not\"}},\"claim(address,uint256,bytes32[])\":{\"params\":{\"_merkleProof\":\"Merkle proof for the reward\",\"_token\":\"Address of the token\",\"_wad\":\"Amount of reward tokens to claim\"}},\"emergencyWidthdraw(address,address,uint256)\":{\"params\":{\"_rescueReceiver\":\"Address of the account that received the reward\",\"_token\":\"Address of the token\",\"_wad\":\"Amount of reward tokens to withdraw\"}},\"epochCounter()\":{\"returns\":{\"_epochCounter\":\"Counter of the current epoch\"}},\"epochDuration()\":{\"returns\":{\"_epochDuration\":\"Duration of each epoch\"}},\"isClaimed(bytes32,address)\":{\"params\":{\"_account\":\"Address of the account\",\"_merkleRoot\":\"The merkle root\"},\"returns\":{\"_isClaimed\":\"Whether the account has claimed rewards for this merkle root\"}},\"lastUpdatedTime()\":{\"returns\":{\"_lastUpdatedTime\":\"Timestamp of the last time the merkle roots were updated\"}},\"merkleRoots(address)\":{\"params\":{\"_token\":\"Address of the token\"},\"returns\":{\"_root\":\"Merkle root for the token\"}},\"modifyParameters(bytes32,bytes)\":{\"params\":{\"_data\":\"Encoded data to modify the parameter\",\"_param\":\"String identifier of the parameter to modify\"}},\"multiClaim(address[],uint256[],bytes32[][])\":{\"params\":{\"_merkleProofs\":\"Merkle proofs for the rewards\",\"_tokens\":\"Addresses of the token(s)\",\"_wads\":\"Amounts of reward tokens to claim\"}},\"pause()\":{\"details\":\"Only authorized addresses can pause the claim functionality\"},\"removeAuthorization(address)\":{\"details\":\"Method will revert if the account is not authorized\",\"params\":{\"_account\":\"Account to remove authorization from\"}},\"rootSetter()\":{\"returns\":{\"_rootSetter\":\"Address of the account that can set the merkle root\"}},\"unpause()\":{\"details\":\"Only authorized addresses can unpause the claim functionality\"},\"updateMerkleRoots(address[],bytes32[])\":{\"params\":{\"_merkleRoots\":\"Merkle root(s) for the token(s)\",\"_tokens\":\"Addresses of the token(s)\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyAuthorized()\":[{\"notice\":\"Throws if the account is already authorized on `addAuthorization`\"}],\"NotAuthorized()\":[{\"notice\":\"Throws if the account is not authorized on `removeAuthorization`\"}],\"RewardDistributor_AlreadyClaimed()\":[{\"notice\":\"Throws when the reward has already been claimed\"}],\"RewardDistributor_ArrayLengthsMustMatch()\":[{\"notice\":\"Throws when the array lengths don't match\"}],\"RewardDistributor_InvalidAmount()\":[{\"notice\":\"Throws when the amount is invalid\"}],\"RewardDistributor_InvalidMerkleProof()\":[{\"notice\":\"Throws when the merkle proof is invalid\"}],\"RewardDistributor_InvalidMerkleRoot()\":[{\"notice\":\"Throws when the merkle root is invalid\"}],\"RewardDistributor_InvalidTokenAddress()\":[{\"notice\":\"Throws when the token address is invalid\"}],\"RewardDistributor_NotRootSetter()\":[{\"notice\":\"Throws when trying to update the merkle roots but not the root setter\"}],\"RewardDistributor_TooSoonEpochNotElapsed()\":[{\"notice\":\"Throws when trying to update the merkle roots before the end of the current epoch\"}],\"Unauthorized()\":[{\"notice\":\"Throws if the account is not authorized and tries to call an `onlyAuthorized` method\"}]},\"events\":{\"AddAuthorization(address)\":{\"notice\":\"Emitted when an account is authorized\"},\"RemoveAuthorization(address)\":{\"notice\":\"Emitted when an account is unauthorized\"},\"RewardDistributorEmergencyWithdrawal(address,address,uint256)\":{\"notice\":\"Emitted when a reward is emergency withdrawn\"},\"RewardDistributorMerkleRootUpdated(address,bytes32,uint256)\":{\"notice\":\"Emitted when a merkle root is updated\"},\"RewardDistributorRewardClaimed(address,address,uint256)\":{\"notice\":\"Emitted when a reward is claimed\"}},\"kind\":\"user\",\"methods\":{\"addAuthorization(address)\":{\"notice\":\"Add authorization to an account\"},\"authorizedAccounts()\":{\"notice\":\"Getter for the authorized accounts\"},\"authorizedAccounts(address)\":{\"notice\":\"Checks whether an account is authorized on the contract\"},\"claim(address,uint256,bytes32[])\":{\"notice\":\"Claims a reward\"},\"emergencyWidthdraw(address,address,uint256)\":{\"notice\":\"Emergency withdraw a reward token\"},\"epochCounter()\":{\"notice\":\"Counter of the current epoch\"},\"epochDuration()\":{\"notice\":\"Duration of each epoch\"},\"isClaimed(bytes32,address)\":{\"notice\":\"Mapping of whether a user has claimed rewards for a given merkle root\"},\"lastUpdatedTime()\":{\"notice\":\"Timestamp of the last time the merkle roots were updated\"},\"merkleRoots(address)\":{\"notice\":\"Mapping of the merkle root for each token\"},\"modifyParameters(bytes32,bytes)\":{\"notice\":\"Set a new value for a global specific parameter\"},\"multiClaim(address[],uint256[],bytes32[][])\":{\"notice\":\"Claims multiple rewards\"},\"pause()\":{\"notice\":\"Pause the claim functionality\"},\"removeAuthorization(address)\":{\"notice\":\"Remove authorization from an account\"},\"rootSetter()\":{\"notice\":\"Address of the account that can set the merkle root\"},\"unpause()\":{\"notice\":\"Unpause the claim functionality\"},\"updateMerkleRoots(address[],bytes32[])\":{\"notice\":\"Updates the merkle root(s) for a token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/tokens/IRewardDistributor.sol\":\"IRewardDistributor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@contracts/=src/contracts/\",\":@defi-wonderland/solidity-utils/=node_modules/@defi-wonderland/solidity-utils/solidity/\",\":@interfaces/=src/interfaces/\",\":@libraries/=src/libraries/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@script/=script/\",\":@test/=test/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"src/interfaces/tokens/IRewardDistributor.sol\":{\"keccak256\":\"0x7256abc8d9876410c86f30c811fa49d1db2837fbbbf7ea245f0739baf999c36d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://908b17b306621a791869334edc2f90c223e8c72631c54023d113bbd8ec9c06cd\",\"dweb:/ipfs/Qmegc8RFqunar61qYTnDUPBHsXWXBamkSSby7tK9wmJfFF\"]},\"src/interfaces/utils/IAuthorizable.sol\":{\"keccak256\":\"0x9cca892064a008cb012e96cf25dede895f6b567ef09b495f3bd866cfca21120e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://08467f9b53861f90611fdb2eeae26edba81a778ac05237b23cd89e9425b971f0\",\"dweb:/ipfs/QmZA9aPfghk8yxpvLP9ECSARqLF4QBAm6HwMy1yteMTjNu\"]},\"src/interfaces/utils/IModifiable.sol\":{\"keccak256\":\"0x6d5c27d18c118abca6050a477b2aeb02b3c2e93093a78df2d82ccfa7a96fcf43\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c1dfe7cdc87cd2c8db3ce10100f688788871ab26ff4617cb03667817fdf060a6\",\"dweb:/ipfs/QmZTHqtK77GwTYnbsY1VNAkrda49NJjTfxawUnYgb5UQSt\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"AlreadyAuthorized"},{"inputs":[],"type":"error","name":"NotAuthorized"},{"inputs":[],"type":"error","name":"RewardDistributor_AlreadyClaimed"},{"inputs":[],"type":"error","name":"RewardDistributor_ArrayLengthsMustMatch"},{"inputs":[],"type":"error","name":"RewardDistributor_InvalidAmount"},{"inputs":[],"type":"error","name":"RewardDistributor_InvalidMerkleProof"},{"inputs":[],"type":"error","name":"RewardDistributor_InvalidMerkleRoot"},{"inputs":[],"type":"error","name":"RewardDistributor_InvalidTokenAddress"},{"inputs":[],"type":"error","name":"RewardDistributor_NotRootSetter"},{"inputs":[],"type":"error","name":"RewardDistributor_TooSoonEpochNotElapsed"},{"inputs":[],"type":"error","name":"Unauthorized"},{"inputs":[],"type":"error","name":"UnrecognizedCType"},{"inputs":[],"type":"error","name":"UnrecognizedParam"},{"inputs":[{"internalType":"address","name":"_account","type":"address","indexed":false}],"type":"event","name":"AddAuthorization","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"_param","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"_cType","type":"bytes32","indexed":true},{"internalType":"bytes","name":"_data","type":"bytes","indexed":false}],"type":"event","name":"ModifyParameters","anonymous":false},{"inputs":[{"internalType":"address","name":"_account","type":"address","indexed":false}],"type":"event","name":"RemoveAuthorization","anonymous":false},{"inputs":[{"internalType":"address","name":"_rescueReceiver","type":"address","indexed":true},{"internalType":"address","name":"_rewardToken","type":"address","indexed":true},{"internalType":"uint256","name":"_wad","type":"uint256","indexed":false}],"type":"event","name":"RewardDistributorEmergencyWithdrawal","anonymous":false},{"inputs":[{"internalType":"address","name":"_rewardToken","type":"address","indexed":true},{"internalType":"bytes32","name":"_merkleRoot","type":"bytes32","indexed":false},{"internalType":"uint256","name":"_epochCounter","type":"uint256","indexed":false}],"type":"event","name":"RewardDistributorMerkleRootUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"_account","type":"address","indexed":true},{"internalType":"address","name":"_rewardToken","type":"address","indexed":true},{"internalType":"uint256","name":"_wad","type":"uint256","indexed":false}],"type":"event","name":"RewardDistributorRewardClaimed","anonymous":false},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"addAuthorization"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"stateMutability":"view","type":"function","name":"authorizedAccounts","outputs":[{"internalType":"bool","name":"_authorized","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"authorizedAccounts","outputs":[{"internalType":"address[]","name":"_accounts","type":"address[]"}]},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_wad","type":"uint256"},{"internalType":"bytes32[]","name":"_merkleProof","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"claim"},{"inputs":[{"internalType":"address","name":"_rescueReceiver","type":"address"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_wad","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"emergencyWidthdraw"},{"inputs":[],"stateMutability":"view","type":"function","name":"epochCounter","outputs":[{"internalType":"uint256","name":"_epochCounter","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"epochDuration","outputs":[{"internalType":"uint256","name":"_epochDuration","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"_merkleRoot","type":"bytes32"},{"internalType":"address","name":"_account","type":"address"}],"stateMutability":"view","type":"function","name":"isClaimed","outputs":[{"internalType":"bool","name":"_isClaimed","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"lastUpdatedTime","outputs":[{"internalType":"uint256","name":"_lastUpdatedTime","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"stateMutability":"view","type":"function","name":"merkleRoots","outputs":[{"internalType":"bytes32","name":"_root","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"_param","type":"bytes32"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"modifyParameters"},{"inputs":[{"internalType":"address[]","name":"_tokens","type":"address[]"},{"internalType":"uint256[]","name":"_wads","type":"uint256[]"},{"internalType":"bytes32[][]","name":"_merkleProofs","type":"bytes32[][]"}],"stateMutability":"nonpayable","type":"function","name":"multiClaim"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pause"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"removeAuthorization"},{"inputs":[],"stateMutability":"view","type":"function","name":"rootSetter","outputs":[{"internalType":"address","name":"_rootSetter","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unpause"},{"inputs":[{"internalType":"address[]","name":"_tokens","type":"address[]"},{"internalType":"bytes32[]","name":"_merkleRoots","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"updateMerkleRoots"}],"devdoc":{"kind":"dev","methods":{"addAuthorization(address)":{"details":"Method will revert if the account is already authorized","params":{"_account":"Account to add authorization to"}},"authorizedAccounts()":{"returns":{"_accounts":"Array of authorized accounts"}},"authorizedAccounts(address)":{"params":{"_account":"Account to check"},"returns":{"_authorized":"Whether the account is authorized or not"}},"claim(address,uint256,bytes32[])":{"params":{"_merkleProof":"Merkle proof for the reward","_token":"Address of the token","_wad":"Amount of reward tokens to claim"}},"emergencyWidthdraw(address,address,uint256)":{"params":{"_rescueReceiver":"Address of the account that received the reward","_token":"Address of the token","_wad":"Amount of reward tokens to withdraw"}},"epochCounter()":{"returns":{"_epochCounter":"Counter of the current epoch"}},"epochDuration()":{"returns":{"_epochDuration":"Duration of each epoch"}},"isClaimed(bytes32,address)":{"params":{"_account":"Address of the account","_merkleRoot":"The merkle root"},"returns":{"_isClaimed":"Whether the account has claimed rewards for this merkle root"}},"lastUpdatedTime()":{"returns":{"_lastUpdatedTime":"Timestamp of the last time the merkle roots were updated"}},"merkleRoots(address)":{"params":{"_token":"Address of the token"},"returns":{"_root":"Merkle root for the token"}},"modifyParameters(bytes32,bytes)":{"params":{"_data":"Encoded data to modify the parameter","_param":"String identifier of the parameter to modify"}},"multiClaim(address[],uint256[],bytes32[][])":{"params":{"_merkleProofs":"Merkle proofs for the rewards","_tokens":"Addresses of the token(s)","_wads":"Amounts of reward tokens to claim"}},"pause()":{"details":"Only authorized addresses can pause the claim functionality"},"removeAuthorization(address)":{"details":"Method will revert if the account is not authorized","params":{"_account":"Account to remove authorization from"}},"rootSetter()":{"returns":{"_rootSetter":"Address of the account that can set the merkle root"}},"unpause()":{"details":"Only authorized addresses can unpause the claim functionality"},"updateMerkleRoots(address[],bytes32[])":{"params":{"_merkleRoots":"Merkle root(s) for the token(s)","_tokens":"Addresses of the token(s)"}}},"version":1},"userdoc":{"kind":"user","methods":{"addAuthorization(address)":{"notice":"Add authorization to an account"},"authorizedAccounts()":{"notice":"Getter for the authorized accounts"},"authorizedAccounts(address)":{"notice":"Checks whether an account is authorized on the contract"},"claim(address,uint256,bytes32[])":{"notice":"Claims a reward"},"emergencyWidthdraw(address,address,uint256)":{"notice":"Emergency withdraw a reward token"},"epochCounter()":{"notice":"Counter of the current epoch"},"epochDuration()":{"notice":"Duration of each epoch"},"isClaimed(bytes32,address)":{"notice":"Mapping of whether a user has claimed rewards for a given merkle root"},"lastUpdatedTime()":{"notice":"Timestamp of the last time the merkle roots were updated"},"merkleRoots(address)":{"notice":"Mapping of the merkle root for each token"},"modifyParameters(bytes32,bytes)":{"notice":"Set a new value for a global specific parameter"},"multiClaim(address[],uint256[],bytes32[][])":{"notice":"Claims multiple rewards"},"pause()":{"notice":"Pause the claim functionality"},"removeAuthorization(address)":{"notice":"Remove authorization from an account"},"rootSetter()":{"notice":"Address of the account that can set the merkle root"},"unpause()":{"notice":"Unpause the claim functionality"},"updateMerkleRoots(address[],bytes32[])":{"notice":"Updates the merkle root(s) for a token"}},"version":1}},"settings":{"remappings":["@contracts/=src/contracts/","@defi-wonderland/solidity-utils/=node_modules/@defi-wonderland/solidity-utils/solidity/","@interfaces/=src/interfaces/","@libraries/=src/libraries/","@openzeppelin/=node_modules/@openzeppelin/","@script/=script/","@test/=test/","@uniswap/=node_modules/@uniswap/","ds-test/=node_modules/ds-test/src/","forge-std/=node_modules/forge-std/src/"],"optimizer":{"enabled":true,"runs":10000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/tokens/IRewardDistributor.sol":"IRewardDistributor"},"evmVersion":"paris","libraries":{}},"sources":{"src/interfaces/tokens/IRewardDistributor.sol":{"keccak256":"0x7256abc8d9876410c86f30c811fa49d1db2837fbbbf7ea245f0739baf999c36d","urls":["bzz-raw://908b17b306621a791869334edc2f90c223e8c72631c54023d113bbd8ec9c06cd","dweb:/ipfs/Qmegc8RFqunar61qYTnDUPBHsXWXBamkSSby7tK9wmJfFF"],"license":"GPL-3.0"},"src/interfaces/utils/IAuthorizable.sol":{"keccak256":"0x9cca892064a008cb012e96cf25dede895f6b567ef09b495f3bd866cfca21120e","urls":["bzz-raw://08467f9b53861f90611fdb2eeae26edba81a778ac05237b23cd89e9425b971f0","dweb:/ipfs/QmZA9aPfghk8yxpvLP9ECSARqLF4QBAm6HwMy1yteMTjNu"],"license":"GPL-3.0"},"src/interfaces/utils/IModifiable.sol":{"keccak256":"0x6d5c27d18c118abca6050a477b2aeb02b3c2e93093a78df2d82ccfa7a96fcf43","urls":["bzz-raw://c1dfe7cdc87cd2c8db3ce10100f688788871ab26ff4617cb03667817fdf060a6","dweb:/ipfs/QmZTHqtK77GwTYnbsY1VNAkrda49NJjTfxawUnYgb5UQSt"],"license":"GPL-3.0"}},"version":1},"id":250}