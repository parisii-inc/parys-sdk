"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Pidcontroller__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_cGains",
                type: "tuple",
                internalType: "struct IPIDController.ControllerGains",
                components: [
                    {
                        name: "kp",
                        type: "int256",
                        internalType: "int256",
                    },
                    {
                        name: "ki",
                        type: "int256",
                        internalType: "int256",
                    },
                    {
                        name: "influenceFactor",
                        type: "int256",
                        internalType: "int256",
                    },
                ],
            },
            {
                name: "_pidParams",
                type: "tuple",
                internalType: "struct IPIDController.PIDControllerParams",
                components: [
                    {
                        name: "integralPeriodSize",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "perSecondCumulativeLeak",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "noiseBarrier",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "feedbackOutputUpperBound",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "feedbackOutputLowerBound",
                        type: "int256",
                        internalType: "int256",
                    },
                ],
            },
            {
                name: "_importedState",
                type: "tuple",
                internalType: "struct IPIDController.DeviationObservation",
                components: [
                    {
                        name: "timestamp",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "proportional",
                        type: "int256",
                        internalType: "int256",
                    },
                    {
                        name: "integral",
                        type: "int256",
                        internalType: "int256",
                    },
                ],
            },
            {
                name: "_oracleRelayer",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "_controllerGains",
        inputs: [],
        outputs: [
            {
                name: "kp",
                type: "int256",
                internalType: "int256",
            },
            {
                name: "ki",
                type: "int256",
                internalType: "int256",
            },
            {
                name: "influenceFactor",
                type: "int256",
                internalType: "int256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "_deviationObservation",
        inputs: [],
        outputs: [
            {
                name: "timestamp",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "proportional",
                type: "int256",
                internalType: "int256",
            },
            {
                name: "integral",
                type: "int256",
                internalType: "int256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "_params",
        inputs: [],
        outputs: [
            {
                name: "integralPeriodSize",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "perSecondCumulativeLeak",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "noiseBarrier",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "feedbackOutputUpperBound",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "feedbackOutputLowerBound",
                type: "int256",
                internalType: "int256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "addAuthorization",
        inputs: [
            {
                name: "_account",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "authorizedAccounts",
        inputs: [
            {
                name: "_account",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "_authorized",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "authorizedAccounts",
        inputs: [],
        outputs: [
            {
                name: "_accounts",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "breaksNoiseBarrier",
        inputs: [
            {
                name: "_piSum",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "_redemptionPrice",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "_breaksNb",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "computeRate",
        inputs: [
            {
                name: "_marketPrice",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "_targetPrice",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "_newRedemptionRate",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "controllerGains",
        inputs: [],
        outputs: [
            {
                name: "_cGains",
                type: "tuple",
                internalType: "struct IPIDController.ControllerGains",
                components: [
                    {
                        name: "kp",
                        type: "int256",
                        internalType: "int256",
                    },
                    {
                        name: "ki",
                        type: "int256",
                        internalType: "int256",
                    },
                    {
                        name: "influenceFactor",
                        type: "int256",
                        internalType: "int256",
                    },
                ],
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "deviationObservation",
        inputs: [],
        outputs: [
            {
                name: "__deviationObservation",
                type: "tuple",
                internalType: "struct IPIDController.DeviationObservation",
                components: [
                    {
                        name: "timestamp",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "proportional",
                        type: "int256",
                        internalType: "int256",
                    },
                    {
                        name: "integral",
                        type: "int256",
                        internalType: "int256",
                    },
                ],
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getBoundedRedemptionRate",
        inputs: [
            {
                name: "_piOutput",
                type: "int256",
                internalType: "int256",
            },
        ],
        outputs: [
            {
                name: "_newRedemptionRate",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getGainAdjustedPIOutput",
        inputs: [
            {
                name: "_proportionalTerm",
                type: "int256",
                internalType: "int256",
            },
            {
                name: "_integralTerm",
                type: "int256",
                internalType: "int256",
            },
        ],
        outputs: [
            {
                name: "_gainAdjustedPIOutput",
                type: "int256",
                internalType: "int256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getGainAdjustedTerms",
        inputs: [
            {
                name: "_proportionalTerm",
                type: "int256",
                internalType: "int256",
            },
            {
                name: "_integralTerm",
                type: "int256",
                internalType: "int256",
            },
        ],
        outputs: [
            {
                name: "_ajustedProportionalTerm",
                type: "int256",
                internalType: "int256",
            },
            {
                name: "_adjustedIntegralTerm",
                type: "int256",
                internalType: "int256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getNextDeviationCumulative",
        inputs: [
            {
                name: "_proportionalTerm",
                type: "int256",
                internalType: "int256",
            },
            {
                name: "_accumulatedLeak",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "_nextDeviationCumulative",
                type: "int256",
                internalType: "int256",
            },
            {
                name: "_appliedDeviation",
                type: "int256",
                internalType: "int256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getNextRedemptionRate",
        inputs: [
            {
                name: "_marketPrice",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "_redemptionPrice",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "_accumulatedLeak",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "_redemptionRate",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "_proportionalTerm",
                type: "int256",
                internalType: "int256",
            },
            {
                name: "_integralTerm",
                type: "int256",
                internalType: "int256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "modifyParameters",
        inputs: [
            {
                name: "_param",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "_data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "params",
        inputs: [],
        outputs: [
            {
                name: "_pidParams",
                type: "tuple",
                internalType: "struct IPIDController.PIDControllerParams",
                components: [
                    {
                        name: "integralPeriodSize",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "perSecondCumulativeLeak",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "noiseBarrier",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "feedbackOutputUpperBound",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "feedbackOutputLowerBound",
                        type: "int256",
                        internalType: "int256",
                    },
                ],
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "removeAuthorization",
        inputs: [
            {
                name: "_account",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "seedProposer",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "timeSinceLastUpdate",
        inputs: [],
        outputs: [
            {
                name: "_elapsed",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "event",
        name: "AddAuthorization",
        inputs: [
            {
                name: "_account",
                type: "address",
                indexed: false,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "ModifyParameters",
        inputs: [
            {
                name: "_param",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "_cType",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "_data",
                type: "bytes",
                indexed: false,
                internalType: "bytes",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "RemoveAuthorization",
        inputs: [
            {
                name: "_account",
                type: "address",
                indexed: false,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "UpdateDeviation",
        inputs: [
            {
                name: "_proportionalDeviation",
                type: "int256",
                indexed: false,
                internalType: "int256",
            },
            {
                name: "_integralDeviation",
                type: "int256",
                indexed: false,
                internalType: "int256",
            },
            {
                name: "_deltaIntegralDeviation",
                type: "int256",
                indexed: false,
                internalType: "int256",
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "AlreadyAuthorized",
        inputs: [],
    },
    {
        type: "error",
        name: "IntNotGreaterOrEqualThan",
        inputs: [
            {
                name: "_x",
                type: "int256",
                internalType: "int256",
            },
            {
                name: "_y",
                type: "int256",
                internalType: "int256",
            },
        ],
    },
    {
        type: "error",
        name: "IntNotLesserOrEqualThan",
        inputs: [
            {
                name: "_x",
                type: "int256",
                internalType: "int256",
            },
            {
                name: "_y",
                type: "int256",
                internalType: "int256",
            },
        ],
    },
    {
        type: "error",
        name: "IntNotLesserThan",
        inputs: [
            {
                name: "_x",
                type: "int256",
                internalType: "int256",
            },
            {
                name: "_y",
                type: "int256",
                internalType: "int256",
            },
        ],
    },
    {
        type: "error",
        name: "IntOverflow",
        inputs: [],
    },
    {
        type: "error",
        name: "NotAuthorized",
        inputs: [],
    },
    {
        type: "error",
        name: "NotLesserOrEqualThan",
        inputs: [
            {
                name: "_x",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "_y",
                type: "uint256",
                internalType: "uint256",
            },
        ],
    },
    {
        type: "error",
        name: "NullAddress",
        inputs: [],
    },
    {
        type: "error",
        name: "NullAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "PIDController_CannotSetPriceDeviationCumulative",
        inputs: [],
    },
    {
        type: "error",
        name: "PIDController_ComputeRateCooldown",
        inputs: [],
    },
    {
        type: "error",
        name: "PIDController_OnlySeedProposer",
        inputs: [],
    },
    {
        type: "error",
        name: "Unauthorized",
        inputs: [],
    },
    {
        type: "error",
        name: "UnrecognizedCType",
        inputs: [],
    },
    {
        type: "error",
        name: "UnrecognizedParam",
        inputs: [],
    },
];
var Pidcontroller__factory = exports.Pidcontroller__factory = /** @class */ (function () {
    function Pidcontroller__factory() {
    }
    Pidcontroller__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    Pidcontroller__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    Pidcontroller__factory.abi = _abi;
    return Pidcontroller__factory;
}());
//# sourceMappingURL=Pidcontroller__factory.js.map