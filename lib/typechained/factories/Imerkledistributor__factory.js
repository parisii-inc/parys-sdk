"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Imerkledistributor__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "function",
        name: "claim",
        inputs: [
            {
                name: "index",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "account",
                type: "address",
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "merkleProof",
                type: "bytes32[]",
                internalType: "bytes32[]",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "deploymentTime",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "isClaimed",
        inputs: [
            {
                name: "index",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "merkleRoot",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "owner",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "sendTokens",
        inputs: [
            {
                name: "dst",
                type: "address",
                internalType: "address",
            },
            {
                name: "tokenAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "timelapseUntilWithdrawWindow",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "token",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "event",
        name: "AddAuthorization",
        inputs: [
            {
                name: "account",
                type: "address",
                indexed: false,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "Claimed",
        inputs: [
            {
                name: "index",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "account",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "RemoveAuthorization",
        inputs: [
            {
                name: "account",
                type: "address",
                indexed: false,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "SendTokens",
        inputs: [
            {
                name: "dst",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "tokenAmount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
];
var Imerkledistributor__factory = exports.Imerkledistributor__factory = /** @class */ (function () {
    function Imerkledistributor__factory() {
    }
    Imerkledistributor__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    Imerkledistributor__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    Imerkledistributor__factory.abi = _abi;
    return Imerkledistributor__factory;
}());
//# sourceMappingURL=Imerkledistributor__factory.js.map