"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IUniswapV3Pool__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "function",
        name: "factory",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "fee",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "uint24",
                internalType: "uint24",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "increaseObservationCardinalityNext",
        inputs: [
            {
                name: "observationCardinalityNext",
                type: "uint16",
                internalType: "uint16",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "initialize",
        inputs: [
            {
                name: "sqrtPriceX96",
                type: "uint160",
                internalType: "uint160",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "liquidity",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "uint128",
                internalType: "uint128",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "observations",
        inputs: [
            {
                name: "index",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "blockTimestamp",
                type: "uint32",
                internalType: "uint32",
            },
            {
                name: "tickCumulative",
                type: "int56",
                internalType: "int56",
            },
            {
                name: "secondsPerLiquidityCumulativeX128",
                type: "uint160",
                internalType: "uint160",
            },
            {
                name: "initialized",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "observe",
        inputs: [
            {
                name: "secondsAgos",
                type: "uint32[]",
                internalType: "uint32[]",
            },
        ],
        outputs: [
            {
                name: "tickCumulatives",
                type: "int56[]",
                internalType: "int56[]",
            },
            {
                name: "secondsPerLiquidityCumulativeX128s",
                type: "uint160[]",
                internalType: "uint160[]",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "positions",
        inputs: [
            {
                name: "key",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        outputs: [
            {
                name: "_liquidity",
                type: "uint128",
                internalType: "uint128",
            },
            {
                name: "feeGrowthInside0LastX128",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "feeGrowthInside1LastX128",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "tokensOwed0",
                type: "uint128",
                internalType: "uint128",
            },
            {
                name: "tokensOwed1",
                type: "uint128",
                internalType: "uint128",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "slot0",
        inputs: [],
        outputs: [
            {
                name: "sqrtPriceX96",
                type: "uint160",
                internalType: "uint160",
            },
            {
                name: "tick",
                type: "int24",
                internalType: "int24",
            },
            {
                name: "observationIndex",
                type: "uint16",
                internalType: "uint16",
            },
            {
                name: "observationCardinality",
                type: "uint16",
                internalType: "uint16",
            },
            {
                name: "observationCardinalityNext",
                type: "uint16",
                internalType: "uint16",
            },
            {
                name: "feeProtocol",
                type: "uint8",
                internalType: "uint8",
            },
            {
                name: "unlocked",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "snapshotCumulativesInside",
        inputs: [
            {
                name: "tickLower",
                type: "int24",
                internalType: "int24",
            },
            {
                name: "tickUpper",
                type: "int24",
                internalType: "int24",
            },
        ],
        outputs: [
            {
                name: "tickCumulativeInside",
                type: "int56",
                internalType: "int56",
            },
            {
                name: "secondsPerLiquidityInsideX128",
                type: "uint160",
                internalType: "uint160",
            },
            {
                name: "secondsInside",
                type: "uint32",
                internalType: "uint32",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "tickSpacing",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "int24",
                internalType: "int24",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "ticks",
        inputs: [
            {
                name: "tick",
                type: "int24",
                internalType: "int24",
            },
        ],
        outputs: [
            {
                name: "liquidityGross",
                type: "uint128",
                internalType: "uint128",
            },
            {
                name: "liquidityNet",
                type: "int128",
                internalType: "int128",
            },
            {
                name: "feeGrowthOutside0X128",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "feeGrowthOutside1X128",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "tickCumulativeOutside",
                type: "int56",
                internalType: "int56",
            },
            {
                name: "secondsPerLiquidityOutsideX128",
                type: "uint160",
                internalType: "uint160",
            },
            {
                name: "secondsOutside",
                type: "uint32",
                internalType: "uint32",
            },
            {
                name: "initialized",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "token0",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "token1",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
];
var IUniswapV3Pool__factory = exports.IUniswapV3Pool__factory = /** @class */ (function () {
    function IUniswapV3Pool__factory() {
    }
    IUniswapV3Pool__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    IUniswapV3Pool__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    IUniswapV3Pool__factory.abi = _abi;
    return IUniswapV3Pool__factory;
}());
//# sourceMappingURL=IUniswapV3Pool__factory.js.map