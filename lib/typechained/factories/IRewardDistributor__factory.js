"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IRewardDistributor__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "function",
        name: "addAuthorization",
        inputs: [
            {
                name: "_account",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "authorizedAccounts",
        inputs: [
            {
                name: "_account",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "_authorized",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "authorizedAccounts",
        inputs: [],
        outputs: [
            {
                name: "_accounts",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "claim",
        inputs: [
            {
                name: "_token",
                type: "address",
                internalType: "address",
            },
            {
                name: "_wad",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "_merkleProof",
                type: "bytes32[]",
                internalType: "bytes32[]",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "emergencyWidthdraw",
        inputs: [
            {
                name: "_rescueReceiver",
                type: "address",
                internalType: "address",
            },
            {
                name: "_token",
                type: "address",
                internalType: "address",
            },
            {
                name: "_wad",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "epochCounter",
        inputs: [],
        outputs: [
            {
                name: "_epochCounter",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "epochDuration",
        inputs: [],
        outputs: [
            {
                name: "_epochDuration",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "isClaimed",
        inputs: [
            {
                name: "_merkleRoot",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "_account",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "_isClaimed",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "lastUpdatedTime",
        inputs: [],
        outputs: [
            {
                name: "_lastUpdatedTime",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "merkleRoots",
        inputs: [
            {
                name: "_token",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "_root",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "modifyParameters",
        inputs: [
            {
                name: "_param",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "_data",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "multiClaim",
        inputs: [
            {
                name: "_tokens",
                type: "address[]",
                internalType: "address[]",
            },
            {
                name: "_wads",
                type: "uint256[]",
                internalType: "uint256[]",
            },
            {
                name: "_merkleProofs",
                type: "bytes32[][]",
                internalType: "bytes32[][]",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "pause",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "removeAuthorization",
        inputs: [
            {
                name: "_account",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "rootSetter",
        inputs: [],
        outputs: [
            {
                name: "_rootSetter",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "unpause",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "updateMerkleRoots",
        inputs: [
            {
                name: "_tokens",
                type: "address[]",
                internalType: "address[]",
            },
            {
                name: "_merkleRoots",
                type: "bytes32[]",
                internalType: "bytes32[]",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "event",
        name: "AddAuthorization",
        inputs: [
            {
                name: "_account",
                type: "address",
                indexed: false,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "ModifyParameters",
        inputs: [
            {
                name: "_param",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "_cType",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "_data",
                type: "bytes",
                indexed: false,
                internalType: "bytes",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "RemoveAuthorization",
        inputs: [
            {
                name: "_account",
                type: "address",
                indexed: false,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "RewardDistributorEmergencyWithdrawal",
        inputs: [
            {
                name: "_rescueReceiver",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "_rewardToken",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "_wad",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "RewardDistributorMerkleRootUpdated",
        inputs: [
            {
                name: "_rewardToken",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "_merkleRoot",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
            {
                name: "_epochCounter",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "RewardDistributorRewardClaimed",
        inputs: [
            {
                name: "_account",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "_rewardToken",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "_wad",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "AlreadyAuthorized",
        inputs: [],
    },
    {
        type: "error",
        name: "NotAuthorized",
        inputs: [],
    },
    {
        type: "error",
        name: "RewardDistributor_AlreadyClaimed",
        inputs: [],
    },
    {
        type: "error",
        name: "RewardDistributor_ArrayLengthsMustMatch",
        inputs: [],
    },
    {
        type: "error",
        name: "RewardDistributor_InvalidAmount",
        inputs: [],
    },
    {
        type: "error",
        name: "RewardDistributor_InvalidMerkleProof",
        inputs: [],
    },
    {
        type: "error",
        name: "RewardDistributor_InvalidMerkleRoot",
        inputs: [],
    },
    {
        type: "error",
        name: "RewardDistributor_InvalidTokenAddress",
        inputs: [],
    },
    {
        type: "error",
        name: "RewardDistributor_NotRootSetter",
        inputs: [],
    },
    {
        type: "error",
        name: "RewardDistributor_TooSoonEpochNotElapsed",
        inputs: [],
    },
    {
        type: "error",
        name: "Unauthorized",
        inputs: [],
    },
    {
        type: "error",
        name: "UnrecognizedCType",
        inputs: [],
    },
    {
        type: "error",
        name: "UnrecognizedParam",
        inputs: [],
    },
];
var IRewardDistributor__factory = exports.IRewardDistributor__factory = /** @class */ (function () {
    function IRewardDistributor__factory() {
    }
    IRewardDistributor__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    IRewardDistributor__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    IRewardDistributor__factory.abi = _abi;
    return IRewardDistributor__factory;
}());
//# sourceMappingURL=IRewardDistributor__factory.js.map