"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Rewardpoolfactory__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        type: "constructor",
        inputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "addAuthorization",
        inputs: [
            {
                name: "_account",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "authorizedAccounts",
        inputs: [
            {
                name: "_account",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "_authorized",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "authorizedAccounts",
        inputs: [],
        outputs: [
            {
                name: "_accounts",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "deployRewardPool",
        inputs: [
            {
                name: "_rewardToken",
                type: "address",
                internalType: "address",
            },
            {
                name: "_stakingManager",
                type: "address",
                internalType: "address",
            },
            {
                name: "_duration",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "_newRewardRatio",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "_rewardPool",
                type: "address",
                internalType: "contract IRewardPool",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "removeAuthorization",
        inputs: [
            {
                name: "_account",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "rewardPoolsList",
        inputs: [],
        outputs: [
            {
                name: "_rewardPoolsList",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "event",
        name: "AddAuthorization",
        inputs: [
            {
                name: "_account",
                type: "address",
                indexed: false,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "DeployRewardPool",
        inputs: [
            {
                name: "_rewardPool",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "_rewardToken",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "_stakingManager",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "_duration",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "_newRewardRatio",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "RemoveAuthorization",
        inputs: [
            {
                name: "_account",
                type: "address",
                indexed: false,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "AlreadyAuthorized",
        inputs: [],
    },
    {
        type: "error",
        name: "NotAuthorized",
        inputs: [],
    },
    {
        type: "error",
        name: "RewardPoolFactory_NullRewardToken",
        inputs: [],
    },
    {
        type: "error",
        name: "RewardPoolFactory_NullStakingManager",
        inputs: [],
    },
    {
        type: "error",
        name: "Unauthorized",
        inputs: [],
    },
];
var Rewardpoolfactory__factory = exports.Rewardpoolfactory__factory = /** @class */ (function () {
    function Rewardpoolfactory__factory() {
    }
    Rewardpoolfactory__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    Rewardpoolfactory__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    Rewardpoolfactory__factory.abi = _abi;
    return Rewardpoolfactory__factory;
}());
//# sourceMappingURL=Rewardpoolfactory__factory.js.map